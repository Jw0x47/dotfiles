---
## The files
- copy: src={{ item}} dest={{ homedir }}/.{{ item | basename }}  mode=644
  with_fileglob:
    - ./default/*

- template: src=vimrc.j2 dest={{ homedir }}/.vimrc mode=644
- template: src=aliases.j2 dest={{ homedir }}/.aliases mode=644
- template: src=zshrc.j2 dest={{ homedir }}/.zshrc mode=644
- template: src=gitconfig.j2 dest={{ homedir }}/.gitconfig mode=644
# make .bin, .config, .vim, .zsh; if linux: .i3
- file: path={{ homedir }}/.config state=directory mode=755
- file: path={{ homedir }}/.bin state=directory mode=755
- file: path={{ homedir }}/.vim  state=directory mode=755
- file: path={{ homedir }}/.zsh  state=directory mode=755
- file: path={{ homedir }}/.i3 state=directory mode=755
  when: ansible_os_family != "Darwin"

- copy: dest={{ homedir }}/.config src=roles/dotfiles/files/default/config/
- copy: dest={{ homedir }}/.bin src=roles/dotfiles/files/default/bin/
- copy: dest={{ homedir }}/.vim src=roles/dotfiles/files/default/vim/
- copy: dest={{ homedir }}/.zsh src=roles/dotfiles/files/default/zsh/
- copy: dest={{ homedir }}/.i3 src=roles/dotfiles/files/default/i3/
  when: ansible_os_family != "Darwin"

# make everything in .bin 755
- file: recurse=yes state=directory mode=755 path={{ homedir }}/.bin

# Packages
- homebrew: name={{ item }} state=present upgrade_all=yes update_homebrew=yes
  when: ansible_os_family == "Darwin"
  with_items: homebrew_packages

- gem: name={{ item }} include_dependencies=yes state=present
  when: ansible_os_family == "Darwin"
  with_items: gems

- file: state=absent path={{ homedir }}/{{ item }}
  with_items: vim_conflict_files

# Pacman (remove vim so gvim installs, update cache 1 time)
- pacman: name="vim" state=absent update_cache=yes
  when: ansible_os_family != "Darwin"

- pacman: name={{ item }} state=present
  sudo: true
  with_items: pacman_packages
  when: ansible_os_family != "Darwin"

# Install vim packages
- shell: vim +PluginInstall +qall
